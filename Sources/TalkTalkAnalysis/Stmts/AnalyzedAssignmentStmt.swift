// Generated by Dev/generate-type.rb 08/20/2024 10:31

import TalkTalkSyntax

public struct AnalyzedAssignmentStmt: AssignmentStmt, AnalyzedStmt {
	public var assigneeAnalyzed: any AnalyzedExpr
	public var valueAnalyzed: any AnalyzedExpr
	let wrapped: any AssignmentStmt

	public var typeID: TypeID
	public var environment: Environment
	public var analyzedChildren: [any AnalyzedSyntax] { fatalError("TODO") }

	// Delegate these to the wrapped node
	public var location: SourceLocation { wrapped.location }
	public var children: [any Syntax] { wrapped.children }

	public func accept<V>(_ visitor: V, _ scope: V.Context) throws -> V.Value where V: AnalyzedVisitor {
		try visitor.visit(self, scope)
	}

	public func accept<V: Visitor>(_ visitor: V, _ context: V.Context) throws -> V.Value {
		try visitor.visit(self, context)
	}
}
