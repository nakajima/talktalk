// Generated by Dev/generate-type.rb 09/27/2024 20:07

import TalkTalkCore

public struct AnalyzedLogicalExpr: LogicalExpr, AnalyzedExpr {
	public let wrapped: LogicalExprSyntax
	public var lhsAnalyzed: any AnalyzedExpr
	public var rhsAnalyzed: any AnalyzedExpr

	public var inferenceType: InferenceType
	public var environment: Environment
	public var analyzedChildren: [any AnalyzedSyntax] { [] }

	// Delegate these to the wrapped node
	public var location: SourceLocation { wrapped.location }
	public var children: [any Syntax] { wrapped.children }
	public var op: Token { wrapped.op }

	public func accept<V>(_ visitor: V, _ scope: V.Context) throws -> V.Value where V: AnalyzedVisitor {
		try visitor.visit(self, scope)
	}

	public func accept<V: Visitor>(_ visitor: V, _ context: V.Context) throws -> V.Value {
		try visitor.visit(wrapped, context)
	}
}
