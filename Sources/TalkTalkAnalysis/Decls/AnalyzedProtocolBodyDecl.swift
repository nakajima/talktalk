// Generated by Dev/generate-type.rb 08/26/2024 12:57

import TalkTalkCore

public struct AnalyzedProtocolBodyDecl: ProtocolBodyDecl, AnalyzedDecl {
	public let wrapped: ProtocolBodyDeclSyntax
	public var declsAnalyzed: [any Decl]

	public var inferenceType: InferenceType
	public var environment: Environment
	public var analyzedChildren: [any AnalyzedSyntax] { [] }

	// Delegate these to the wrapped node
	public var location: SourceLocation { wrapped.location }
	public var children: [any Syntax] { wrapped.children }

	public func accept<V>(_ visitor: V, _ scope: V.Context) throws -> V.Value where V: AnalyzedVisitor {
		try visitor.visit(self, scope)
	}

	public func accept<V: Visitor>(_ visitor: V, _ context: V.Context) throws -> V.Value {
		try visitor.visit(wrapped, context)
	}
}
