// Generated by Dev/generate-type.rb 09/04/2024 18:30

import TalkTalkSyntax

public struct AnalyzedEnumCaseDecl: EnumCaseDecl, AnalyzedDecl {
  public let wrapped: EnumCaseDeclSyntax
	public var nameTokenAnalyzed: Token
	public var attachedTypesAnalyzed: [AnalyzedTypeExpr]

	public var inferenceType: InferenceType
	public var environment: Environment
	public var analyzedChildren: [any AnalyzedSyntax] {
		attachedTypesAnalyzed
	}

	// Delegate these to the wrapped node
	public var location: SourceLocation { wrapped.location }
	public var children: [any Syntax] { wrapped.children }
	public var nameToken: Token { wrapped.nameToken }
	public var attachedTypes: [any TypeExpr] { wrapped.attachedTypes }

	public func accept<V>(_ visitor: V, _ scope: V.Context) throws -> V.Value where V: AnalyzedVisitor {
		try visitor.visit(self, scope)
	}

	public func accept<V: Visitor>(_ visitor: V, _ context: V.Context) throws -> V.Value {
		try visitor.visit(wrapped, context)
	}
}
